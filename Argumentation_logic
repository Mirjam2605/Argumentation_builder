import yaml
import ttg


# Load your YAML data (replace 'your_yaml_file.yaml' with your actual file)
def load_yaml(file_path):
    with open(file_path, 'r') as file:
        return yaml.safe_load(file)

# Load your YAML data (replace 'your_yaml_file.yaml' with your actual file)
yaml_data = load_yaml('statement_v2.yml')


statements = list(yaml_data.values())
num_state = len(statements)
prop_expr = []

# divide statements into atoms and propositional expressions
for statement in statements:
    if len(statement) != 1 :
        prop_expr.append(statement)
        statements.remove(statement)

print(statements)
print(prop_expr)

# Find H is consistent

# build truth table
truth_table = ttg.Truths(statements, prop_expr).as_pandas #table not right until now!

print(truth_table)


support_candidates = []

# 1. consistent: all 1 in a row
for col in truth_table.columns:
    support_candidates.append([col])

for i in range(num_state):
    x = truth_table.iloc[i]
    support = x.index[x == 1].tolist()
    support_candidates.append(support)
print(support_candidates) # c,a missing and a, not c missing ?

# 2. conclusion entailment

# find h for every H
i = 0
for support in support_candidates:

    if len(support) == 1 and "=>" not in support: # h for one variable candidate is the same as H finding arrow doesnt work right now
        h = support[0]
        support_candidates[i].append(h)
        i = i+1
    
print(support_candidates)
